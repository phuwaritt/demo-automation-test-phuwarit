
def result_jenkins_emoji(String failed_count){
    def message_emoji = ""
    if (failed_count.toInteger() == 0) {
        message_emoji = ":671ce8d3a35105bd5feefb5e006e749f:"
    } else {
        message_emoji = ":yuno:"
    }
    return "${message_emoji}"
}

pipeline {
    agent { label 'bpy-agent'}
    environment {
        BASE_URL = 'http://192.8.8.133:8080/'
        PROJECT_ID = '3f9c8c76-2ecf-4502-a1bf-449ff28ff740'
        REPORT_PATH = "./testResult/output.xml"
    }
    stages {
        stage('Assign BPY 01') {
            steps {
                script{
                    sh(script: 'pabot --pabotlib --testlevelsplit --processes 3 -d testResult test-project-web-robotframework/testscripts/tc_shopping_carts_scripts.robot', returnStatus: true)
                    archiveArtifacts artifacts: 'testResult/*.html, testResult/*.jpg, testResult/*.png, testResult/*.xml', fingerprint: true, onlyIfSuccessful: false
                    robot outputPath: './testResult', otherFiles: '*.png,*.jpg', logFileName: 'log.html', outputFileName: 'output.xml', reportFileName: 'report.html'
                    String passed_count =  tm('${ROBOT_PASSED}')
                    String failed_count = tm('${ROBOT_FAILED}')
                    String BRANCH_NAME = "${GIT_BRANCH}"
                    String JOB_NAME = "${env.JOB_NAME}"
                    echo "Passed Tests: ${passed_count}"
                    echo "Failed Tests: ${failed_count}"

                    def total_tests = passed_count.toInteger() + failed_count.toInteger()
                    def log_url = "${env.BASE_URL}/job/${JOB_NAME}/${env.BUILD_NUMBER}/"
                    def message_emoji = result_jenkins_emoji(failed_count)

                    slackSend(channel:"#cicd_training_space",message: "BPY \n ${JOB_NAME} #${env.BUILD_NUMBER} ${message_emoji} \n *BRANCH:* ${BRANCH_NAME} \n Total Test Cases: ${total_tests} \n Passed : ${passed_count} :white_check_mark: \n Failed : ${failed_count} :face_vomiting: \n After: ${currentBuild.durationString} \n (<${log_url}|Report>)")
                    echo "This is workspace: $WORKSPACE"
                    common = load "$WORKSPACE/common.groovy"
                    common.notify_line(JOB_NAME, BRANCH_NAME, total_tests, passed_count, failed_count, log_url)
                    common.report_sender()
                }
            }
        post{
            always{
                cleanWs()
                echo "Clear"
                }
            }
            
            }
        }
    }